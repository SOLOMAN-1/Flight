package com.flight.flight.flightEntity;

import com.speedment.jpastreamer.field.ComparableField;
import com.speedment.jpastreamer.field.StringField;
import com.speedment.jpastreamer.field.exception.IllegalJavaBeanException;

/**
 * The generated base for entity {@link FlightDetails} representing entities of
 * the {@code flightDetails}-table in the database.
 * <p> This file has been automatically generated by JPAStreamer.
 * 
 * @author JPAStreamer
 */
public final class FlightDetails$ {
    
    /**
     * This Field corresponds to the {@link FlightDetails} field "airline".
     */
    public static final StringField<FlightDetails> airline = StringField.create(
        FlightDetails.class,
        "airline",
        FlightDetails::getAirline,
        false
    );
    /**
     * This Field corresponds to the {@link FlightDetails} field "totalFareBdt".
     */
    public static final ComparableField<FlightDetails, Double> totalFareBdt = ComparableField.create(
        FlightDetails.class,
        "totalFareBdt",
        FlightDetails::getTotalFareBdt,
        false
    );
    /**
     * This Field corresponds to the {@link FlightDetails} field
     * "departureDateTime".
     */
    public static final StringField<FlightDetails> departureDateTime = StringField.create(
        FlightDetails.class,
        "departureDateTime",
        FlightDetails::getDepartureDateTime,
        false
    );
    /**
     * This Field corresponds to the {@link FlightDetails} field "source".
     */
    public static final StringField<FlightDetails> source = StringField.create(
        FlightDetails.class,
        "source",
        FlightDetails::getSource,
        false
    );
    /**
     * This Field corresponds to the {@link FlightDetails} field
     * "daysBeforeDeparture".
     */
    public static final ComparableField<FlightDetails, Integer> daysBeforeDeparture = ComparableField.create(
        FlightDetails.class,
        "daysBeforeDeparture",
        FlightDetails::getDaysBeforeDeparture,
        false
    );
    /**
     * This Field corresponds to the {@link FlightDetails} field "sourceName".
     */
    public static final StringField<FlightDetails> sourceName = StringField.create(
        FlightDetails.class,
        "sourceName",
        FlightDetails::getSourceName,
        false
    );
    /**
     * This Field corresponds to the {@link FlightDetails} field
     * "bookingSource".
     */
    public static final StringField<FlightDetails> bookingSource = StringField.create(
        FlightDetails.class,
        "bookingSource",
        FlightDetails::getBookingSource,
        false
    );
    /**
     * This Field corresponds to the {@link FlightDetails} field "stopovers".
     */
    public static final StringField<FlightDetails> stopovers = StringField.create(
        FlightDetails.class,
        "stopovers",
        FlightDetails::getStopovers,
        false
    );
    /**
     * This Field corresponds to the {@link FlightDetails} field
     * "taxSurchargeBdt".
     */
    public static final ComparableField<FlightDetails, Double> taxSurchargeBdt = ComparableField.create(
        FlightDetails.class,
        "taxSurchargeBdt",
        FlightDetails::getTaxSurchargeBdt,
        false
    );
    /**
     * This Field corresponds to the {@link FlightDetails} field "flightClass".
     */
    public static final StringField<FlightDetails> flightClass = StringField.create(
        FlightDetails.class,
        "flightClass",
        FlightDetails::getFlightClass,
        false
    );
    /**
     * This Field corresponds to the {@link FlightDetails} field "destination".
     */
    public static final StringField<FlightDetails> destination = StringField.create(
        FlightDetails.class,
        "destination",
        FlightDetails::getDestination,
        false
    );
    /**
     * This Field corresponds to the {@link FlightDetails} field "durationHrs".
     */
    public static final ComparableField<FlightDetails, Double> durationHrs = ComparableField.create(
        FlightDetails.class,
        "durationHrs",
        FlightDetails::getDurationHrs,
        false
    );
    /**
     * This Field corresponds to the {@link FlightDetails} field "aircraftType".
     */
    public static final StringField<FlightDetails> aircraftType = StringField.create(
        FlightDetails.class,
        "aircraftType",
        FlightDetails::getAircraftType,
        false
    );
    /**
     * This Field corresponds to the {@link FlightDetails} field "baseFareBdt".
     */
    public static final ComparableField<FlightDetails, Double> baseFareBdt = ComparableField.create(
        FlightDetails.class,
        "baseFareBdt",
        FlightDetails::getBaseFareBdt,
        false
    );
    /**
     * This Field corresponds to the {@link FlightDetails} field
     * "destinationName".
     */
    public static final StringField<FlightDetails> destinationName = StringField.create(
        FlightDetails.class,
        "destinationName",
        FlightDetails::getDestinationName,
        false
    );
    /**
     * This Field corresponds to the {@link FlightDetails} field "seasonality".
     */
    public static final StringField<FlightDetails> seasonality = StringField.create(
        FlightDetails.class,
        "seasonality",
        FlightDetails::getSeasonality,
        false
    );
    /**
     * This Field corresponds to the {@link FlightDetails} field "id".
     */
    public static final ComparableField<FlightDetails, Long> id = ComparableField.create(
        FlightDetails.class,
        "id",
        flightDetails -> {throw new IllegalJavaBeanException(FlightDetails.class, "id");},
        false
    );
    /**
     * This Field corresponds to the {@link FlightDetails} field
     * "arrivalDateTime".
     */
    public static final StringField<FlightDetails> arrivalDateTime = StringField.create(
        FlightDetails.class,
        "arrivalDateTime",
        FlightDetails::getArrivalDateTime,
        false
    );
}